<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pp.setmeal.mapper.SetmealMapper">
    
    <resultMap type="Setmeal" id="SetmealResult">
        <result property="id"    column="id"    />
        <result property="categoryId"    column="category_id"    />
        <result property="name"    column="name"    />
        <result property="price"    column="price"    />
        <result property="status"    column="status"    />
        <result property="code"    column="code"    />
        <result property="description"    column="description"    />
        <result property="image"    column="image"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <resultMap id="SetmealSetmealDishResult" type="Setmeal" extends="SetmealResult">
        <collection property="setmealDishList" ofType="SetmealDish" column="id" select="selectSetmealDishList" />
    </resultMap>

    <resultMap type="SetmealDish" id="SetmealDishResult">
        <result property="id"    column="id"    />
        <result property="setmealId"    column="setmeal_id"    />
        <result property="dishId"    column="dish_id"    />
        <result property="name"    column="name"    />
        <result property="price"    column="price"    />
        <result property="copies"    column="copies"    />
        <result property="sort"    column="sort"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectSetmealVo">
        select id, category_id, name, price, status, code, description, image, create_time, update_time from tb_setmeal
    </sql>

    <select id="selectSetmealList" parameterType="Setmeal" resultMap="SetmealResult">
        <include refid="selectSetmealVo"/>
        <where>  
            <if test="categoryId != null "> and category_id = #{categoryId}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="price != null "> and price = #{price}</if>
            <if test="status != null "> and status = #{status}</if>
        </where>
    </select>
    
    <select id="selectSetmealById" parameterType="Long" resultMap="SetmealSetmealDishResult">
        select id, category_id, name, price, status, code, description, image, create_time, update_time
        from tb_setmeal
        where id = #{id}
    </select>

    <select id="selectSetmealDishList" resultMap="SetmealDishResult">
        select id, setmeal_id, dish_id, name, price, copies, sort, create_time, update_time
        from tb_setmeal_dish
        where setmeal_id = #{setmeal_id}
    </select>

    <insert id="insertSetmeal" parameterType="Setmeal" useGeneratedKeys="true" keyProperty="id">
        insert into tb_setmeal
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="categoryId != null">category_id,</if>
            <if test="name != null and name != ''">name,</if>
            <if test="price != null">price,</if>
            <if test="status != null">status,</if>
            <if test="code != null">code,</if>
            <if test="description != null">description,</if>
            <if test="image != null">image,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="categoryId != null">#{categoryId},</if>
            <if test="name != null and name != ''">#{name},</if>
            <if test="price != null">#{price},</if>
            <if test="status != null">#{status},</if>
            <if test="code != null">#{code},</if>
            <if test="description != null">#{description},</if>
            <if test="image != null">#{image},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateSetmeal" parameterType="Setmeal">
        update tb_setmeal
        <trim prefix="SET" suffixOverrides=",">
            <if test="categoryId != null">category_id = #{categoryId},</if>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="price != null">price = #{price},</if>
            <if test="status != null">status = #{status},</if>
            <if test="code != null">code = #{code},</if>
            <if test="description != null">description = #{description},</if>
            <if test="image != null">image = #{image},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteSetmealById" parameterType="Long">
        delete from tb_setmeal where id = #{id}
    </delete>

    <delete id="deleteSetmealByIds" parameterType="String">
        delete from tb_setmeal where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
    <delete id="deleteSetmealDishBySetmealIds" parameterType="String">
        delete from tb_setmeal_dish where setmeal_id in 
        <foreach item="setmealId" collection="array" open="(" separator="," close=")">
            #{setmealId}
        </foreach>
    </delete>

    <delete id="deleteSetmealDishBySetmealId" parameterType="Long">
        delete from tb_setmeal_dish where setmeal_id = #{setmealId}
    </delete>

    <insert id="batchSetmealDish">
        insert into tb_setmeal_dish( id, setmeal_id, dish_id, name, price, copies, sort, create_time, update_time) values
        <foreach item="item" index="index" collection="list" separator=",">
            ( #{item.id}, #{item.setmealId}, #{item.dishId}, #{item.name}, #{item.price}, #{item.copies}, #{item.sort}, #{item.createTime}, #{item.updateTime})
        </foreach>
    </insert>
</mapper>